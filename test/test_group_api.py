# coding: utf-8

"""
    Stakeholder engagement API

    This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import iengage-client
from iengage-client.rest import ApiException
from iengage-client.apis.group_api import GroupApi


class TestGroupApi(unittest.TestCase):
    """ GroupApi unit test stubs """

    def setUp(self):
        self.api = iengage-client.apis.group_api.GroupApi()

    def tearDown(self):
        pass

    def test_create_group(self):
        """
        Test case for create_group

        Create group
        """
        pass

    def test_delete_group(self):
        """
        Test case for delete_group

        Delete group
        """
        pass

    def test_follow_group(self):
        """
        Test case for follow_group

        Follow group
        """
        pass

    def test_get_group_followers(self):
        """
        Test case for get_group_followers

        Get the list of followers for the group
        """
        pass

    def test_get_group_ideas(self):
        """
        Test case for get_group_ideas

        Get list of all ideas in a group
        """
        pass

    def test_get_groups(self):
        """
        Test case for get_groups

        Get the list of groups visible for user
        """
        pass

    def test_get_recommendation_group(self):
        """
        Test case for get_recommendation_group

        Get list of recommended groups
        """
        pass

    def test_get_user_following_groups(self):
        """
        Test case for get_user_following_groups

        Get list of groups that a user is following
        """
        pass

    def test_search_groups(self):
        """
        Test case for search_groups

        Get list of matching groups
        """
        pass

    def test_unfollow_group(self):
        """
        Test case for unfollow_group

        Unfollow group
        """
        pass

    def test_update_group(self):
        """
        Test case for update_group

        Update group
        """
        pass


if __name__ == '__main__':
    unittest.main()
