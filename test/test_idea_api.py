# coding: utf-8

"""
    Stakeholder engagement API

    This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import iengage_client
from iengage_client.rest import ApiException
from iengage_client.apis.idea_api import IdeaApi


class TestIdeaApi(unittest.TestCase):
    """ IdeaApi unit test stubs """

    def setUp(self):
        self.api = iengage_client.apis.idea_api.IdeaApi()

    def tearDown(self):
        pass

    def test_delete_comment(self):
        """
        Test case for delete_comment

        Delete comment
        """
        pass

    def test_delete_idea(self):
        """
        Test case for delete_idea

        Delete idea
        """
        pass

    def test_follow_idea(self):
        """
        Test case for follow_idea

        Follow idea
        """
        pass

    def test_get_all_ideas(self):
        """
        Test case for get_all_ideas

        Get list of Ideas
        """
        pass

    def test_get_following_ideas(self):
        """
        Test case for get_following_ideas

        Get list of ideas that users are following
        """
        pass

    def test_get_group_ideas(self):
        """
        Test case for get_group_ideas

        Get list of ideas in group
        """
        pass

    def test_get_idea(self):
        """
        Test case for get_idea

        Get idea by id
        """
        pass

    def test_get_idea_comment(self):
        """
        Test case for get_idea_comment

        Get list of comments on idea
        """
        pass

    def test_get_idea_followers(self):
        """
        Test case for get_idea_followers

        Get list of followers for this idea
        """
        pass

    def test_get_idea_rating_parameters(self):
        """
        Test case for get_idea_rating_parameters

        Get rating parameters of idea by user
        """
        pass

    def test_get_idea_ratings(self):
        """
        Test case for get_idea_ratings

        Get list of ideas that are rated by user 
        """
        pass

    def test_get_recommend_ideas(self):
        """
        Test case for get_recommend_ideas

        Get the list of recommended ideas
        """
        pass

    def test_get_top_ideas(self):
        """
        Test case for get_top_ideas

        Get the list of top ideas
        """
        pass

    def test_get_user_ideas(self):
        """
        Test case for get_user_ideas

        Get list of ideas shared by user
        """
        pass

    def test_get_user_rate_ideas(self):
        """
        Test case for get_user_rate_ideas

        Get list of ideas rated by user
        """
        pass

    def test_rate_idea(self):
        """
        Test case for rate_idea

        Rate an idea
        """
        pass

    def test_rate_idea_0(self):
        """
        Test case for rate_idea_0

        Give rating on idea
        """
        pass

    def test_search_ideas(self):
        """
        Test case for search_ideas

        Get list of matching ideas
        """
        pass

    def test_share_form_idea(self):
        """
        Test case for share_form_idea

        Share Idea with attachments
        """
        pass

    def test_share_idea(self):
        """
        Test case for share_idea

        Share idea  
        """
        pass

    def test_share_idea_comment(self):
        """
        Test case for share_idea_comment

        Comment on shared idea
        """
        pass

    def test_unfollow_idea(self):
        """
        Test case for unfollow_idea

        Unfollow idea
        """
        pass

    def test_update_commet(self):
        """
        Test case for update_commet

        Update comment
        """
        pass

    def test_update_idea(self):
        """
        Test case for update_idea

        Update idea
        """
        pass


if __name__ == '__main__':
    unittest.main()
