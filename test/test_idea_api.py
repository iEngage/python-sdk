# coding: utf-8

"""
    iEngage 2.0 API

    This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import iengage_client
from iengage_client.rest import ApiException
from iengage_client.apis.idea_api import IdeaApi
from iengage_client.models.idea import  Idea
from iengage_client.models.group import Group
from iengage_client.models.comment import Comment



class TestIdeaApi(unittest.TestCase):
    """ IdeaApi unit test stubs """

    def setUp(self):
        iengage_client.configuration.access_token = None
        self.api = iengage_client.apis.idea_api.IdeaApi()

    def tearDown(self):
        pass

    def test_delete_comment(self):
        """
        Test case for delete_comment

        Delete comment
        """
        requesterId = None;
        clientToken = None;
        cid = 649651
        print(self.api.delete_comment(cid,requesterId,clientToken))
        pass

    def test_delete_idea(self):
        """
        Test case for delete_idea

        Delete idea
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        print(self.api.delete_idea(iid,requesterId,clientToken,None))
        pass

    def test_follow_idea(self):
        """
        Test case for follow_idea

        Follow idea
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        print(self.api.follow_idea(iid,requesterId,clientToken))
        pass

    def test_get_all_ideas(self):
        """
        Test case for get_all_ideas

        Get list of Ideas
        """
        requesterId = None;
        clientToken = None;
        start = 0
        end = 10
        print(self.api.get_all_ideas(start,end,requesterId,clientToken))
        pass

    def test_get_following_ideas(self):
        """
        Test case for get_following_ideas

        Get list of ideas that users are following
        """
        requesterId = None;
        clientToken = None;
        uid = None
        start = 0
        end = 10
        print(self.api.get_following_ideas(uid,start,end,requesterId,clientToken))
        pass

    def test_get_group_ideas(self):
        """
        Test case for get_group_ideas

        Get list of ideas in group
        """
        requesterId = None;
        clientToken = None;
        start = 0
        end = 10
        uid = None
        gid = None
        print(self.api.get_group_ideas(uid,gid,start,end, requesterId,clientToken))
        pass

    def test_get_idea(self):
        """
        Test case for get_idea

        Get idea by id
        """
        iid = 649623
        requesterId = None;
        clientToken = None;
        print(self.api.get_idea(iid,requesterId,clientToken))
        pass

    def test_get_idea_comment(self):
        """
        Test case for get_idea_comment

        Get list of comments on idea
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        start = 0
        end = 10
        print(self.api.get_idea_comment(iid,start,end,requesterId,clientToken))
        pass

    def test_get_idea_followers(self):
        """
        Test case for get_idea_followers

        Get list of followers for this idea
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        start = 0
        end = 10
        print(self.api.get_idea_comment(iid,start,end,requesterId,clientToken))
        pass

    def test_get_idea_rating_parameters(self):
        """
        Test case for get_idea_rating_parameters

        Get rating parameters of idea by user
        """
        requesterId = None;
        clientToken = None;
        pass

    def test_get_idea_ratings(self):
        """
        Test case for get_idea_ratings

        Get list of ideas that are rated by user 
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        uid = 532893
        istage = "under-consideration"
        print(self.api.get_idea_ratings(uid,iid,istage,requesterId,clientToken))
        pass

    def test_get_recommend_ideas(self):
        """
        Test case for get_recommend_ideas

        Get the list of recommended ideas
        """
        requesterId = None;
        clientToken = None;
        start = 0
        end = 10
        print(self.api.get_recommend_ideas(start,end,requesterId,clientToken))
        pass

    def test_get_top_ideas(self):
        """
        Test case for get_top_ideas

        Get the list of top ideas
        """
        requesterId = None;
        clientToken = None;
        start = 0
        end = 10
        print(self.api.get_top_ideas(start,end,requesterId,clientToken))
        pass

    def test_get_user_ideas(self):
        """
        Test case for get_user_ideas

        Get list of ideas shared by user
        """
        requesterId = None;
        clientToken = None;
        uid = 532893
        start = 0
        end = 10
        print(self.api.get_user_ideas(uid,start,end,requesterId,clientToken))
        pass

    def test_get_user_rate_ideas(self):
        """
        Test case for get_user_rate_ideas

        Get list of ideas rated by user
        """
        requesterId = None;
        clientToken = None;
        start =0
        end =10
        uid = 532893
        print(self.api.get_user_rate_ideas(uid,start,end,requesterId,clientToken))
        pass

    def test_rate_idea(self):
        """
        Test case for rate_idea

        Rate an idea
        """
        requesterId = None;
        clientToken = None;
        uid = 532893
        iid = 649623
        idea_stage = "under-consideration"
        print(uid)
        print(self.api.rate_idea(uid,iid,idea_stage,requesterId,clientToken))

        pass

    def test_rate_idea_0(self):
        """
        Test case for rate_idea_0

        Give rating on idea
        """
        requesterId = None;
        clientToken = None;
        pass

    def test_search_ideas(self):
        """
        Test case for search_ideas

        Get list of matching ideas
        """
        requesterId = None;
        clientToken = None;
        uid = 532893
        iid = 649623
        idea_stage = 'under-consideration'
        search_text = 'good'
        start = 0
        end = 10
        print(self.api.search_ideas(search_text,start,end,requesterId,clientToken))
        pass

    def test_share_form_idea(self):
        """
        Test case for share_form_idea

        Share Idea with attachments
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        print(self.api.share_form_idea())
        pass

    def test_share_idea(self):
        """
        Test case for share_idea

        Share idea  
        """
        requesterId = None;
        clientToken = None;
        i = Idea()
        i.idea_title = "Idea 100"
        i.idea_description = "Idea 100 Description"

        g = Group()
        g.group_id = 533881
        i.group = g

        print(self.api.share_idea(requesterId,clientToken,body=i))


        pass

    def test_share_idea_comment(self):
        """
        Test case for share_idea_comment

        Comment on shared idea
        """
        requesterId = None;
        clientToken = None;
        iid = 641531
        c = Comment()
        c.comment_text = "Idea Comment"
        print(self.api.share_idea_comment(iid,requesterId,clientToken,body=c))

        pass

    def test_unfollow_idea(self):
        """
        Test case for unfollow_idea

        Unfollow idea
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        print(self.api.unfollow_idea(iid,requesterId,clientToken))
        pass

    def test_update_commet(self):
        """
        Test case for update_commet

        Update comment
        """
        requesterId = None;
        clientToken = None;
        icid = 649651
        icid_text = "Comment change"
        print(self.api.update_commet(icid,icid_text,requesterId,clientToken))
        pass

    def test_update_idea(self):
        """
        Test case for update_idea

        Update idea
        """
        requesterId = None;
        clientToken = None;
        iid = 649623
        iid_title = "Idea 100"
        iid_desc = "Idea 100 Updated Description"
        print(self.api.update_idea(iid,iid_title,iid_desc,requesterId,clientToken))
        pass


if __name__ == '__main__':
    unittest.main()
