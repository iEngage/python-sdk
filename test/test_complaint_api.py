# coding: utf-8

"""
    Stakeholder engagement API

    This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import iengage-client
from iengage-client.rest import ApiException
from iengage-client.apis.complaint_api import ComplaintApi


class TestComplaintApi(unittest.TestCase):
    """ ComplaintApi unit test stubs """

    def setUp(self):
        self.api = iengage-client.apis.complaint_api.ComplaintApi()

    def tearDown(self):
        pass

    def test_add_complaint(self):
        """
        Test case for add_complaint

        Share complaint without attachment
        """
        pass

    def test_add_complaint_0(self):
        """
        Test case for add_complaint_0

        Share complaint with attachment
        """
        pass

    def test_add_solution(self):
        """
        Test case for add_solution

        Share solution on complaint
        """
        pass

    def test_create_complaint_category(self):
        """
        Test case for create_complaint_category

        Create complaint category
        """
        pass

    def test_delete_complaint(self):
        """
        Test case for delete_complaint

        Delete complaint
        """
        pass

    def test_delete_complaint_category(self):
        """
        Test case for delete_complaint_category

        Delete complaint cotegory
        """
        pass

    def test_delete_solution(self):
        """
        Test case for delete_solution

        Delete solution
        """
        pass

    def test_dislike_solution(self):
        """
        Test case for dislike_solution

        Dislike Solution
        """
        pass

    def test_get_complaint(self):
        """
        Test case for get_complaint

        Get complaint by id
        """
        pass

    def test_get_complaint_categories(self):
        """
        Test case for get_complaint_categories

        Get list of complaint category
        """
        pass

    def test_get_complaints_for_user(self):
        """
        Test case for get_complaints_for_user

        Get list of all complaint visible for user
        """
        pass

    def test_get_friends_complaints(self):
        """
        Test case for get_friends_complaints

        Get list of complaints shared by your friends
        """
        pass

    def test_get_recommend_complaint(self):
        """
        Test case for get_recommend_complaint

        Get list of recommended complaints
        """
        pass

    def test_get_recommended_complaints_from_db(self):
        """
        Test case for get_recommended_complaints_from_db

        Get list of recommended complaints from DB
        """
        pass

    def test_get_recommended_users_from_db(self):
        """
        Test case for get_recommended_users_from_db

        Get list of recommended Users from DB
        """
        pass

    def test_get_solutions(self):
        """
        Test case for get_solutions

        Get list of solutions by ComplaintId
        """
        pass

    def test_get_user_complaints(self):
        """
        Test case for get_user_complaints

        Get list of complaints shared by user
        """
        pass

    def test_get_user_subscribed_complaint_categories(self):
        """
        Test case for get_user_subscribed_complaint_categories

        Get list of Complaint categories subscribed by user
        """
        pass

    def test_get_user_subscribed_complaints(self):
        """
        Test case for get_user_subscribed_complaints

        Get list of complaints subscribed by user
        """
        pass

    def test_like_solution(self):
        """
        Test case for like_solution

        Like solution
        """
        pass

    def test_mark_as_an_solution(self):
        """
        Test case for mark_as_an_solution

        Mark solution as a solution
        """
        pass

    def test_search_complaints(self):
        """
        Test case for search_complaints

        Get list of complaints by search
        """
        pass

    def test_subscribe_complaint(self):
        """
        Test case for subscribe_complaint

        Subscribe complaint
        """
        pass

    def test_subscribe_complaint_category(self):
        """
        Test case for subscribe_complaint_category

        Subscribe complaint category
        """
        pass

    def test_unmark_as_an_solution(self):
        """
        Test case for unmark_as_an_solution

        Unmark solution as a solution
        """
        pass

    def test_unsubscribe_complaint(self):
        """
        Test case for unsubscribe_complaint

        Unsubscribe Complaint
        """
        pass

    def test_unsubscribe_complaint_category(self):
        """
        Test case for unsubscribe_complaint_category

        Unsubscribe complaint category
        """
        pass

    def test_update_complaint(self):
        """
        Test case for update_complaint

        Update complaint
        """
        pass

    def test_update_complaint_category(self):
        """
        Test case for update_complaint_category

        Update complaint category
        """
        pass

    def test_update_solution(self):
        """
        Test case for update_solution

        Update solution
        """
        pass


if __name__ == '__main__':
    unittest.main()
